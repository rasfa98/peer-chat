{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/app.component.css","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/components/animal/animal.component.css","./src/app/components/animal/animal.component.html","./src/app/components/animal/animal.component.ts","./src/app/services/database.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = ./src/app/app.component.css\n// module chunks = main","module.exports = \"<app-animal></app-animal>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\n\n\nimport { AppComponent } from './app.component';\nimport { AnimalComponent } from './components/animal/animal.component';\n\nimport { DatabaseService } from './services/database.service';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AnimalComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule\n  ],\n  providers: [DatabaseService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/animal/animal.component.css\n// module id = ./src/app/components/animal/animal.component.css\n// module chunks = main","module.exports = \"<h1>Animals in DB</h1>\\n\\n<p>Here are the current animals:</p>\\n<ul>\\n  <li *ngFor=\\\"let animal of animals\\\">{{animal.name}}, {{animal.age}}</li>\\n</ul>\\n\\n<p>Add new animal:</p>\\n\\n<form (submit)=\\\"addAnimal()\\\">\\n  <label for=\\\"animalName\\\">Name:</label>\\n  <input type=\\\"text\\\" [(ngModel)]=\\\"name\\\" name=\\\"name\\\">\\n\\n  <label for=\\\"animalAge\\\">Age:</label>\\n  <input type=\\\"text\\\" [(ngModel)]=\\\"age\\\" name=\\\"age\\\">\\n\\n  <button type=\\\"submit\\\" value=\\\"submit\\\">Add to DB</button>\\n</form>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/animal/animal.component.html\n// module id = ./src/app/components/animal/animal.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { DatabaseService } from '../../services/database.service';\n\n@Component({\n  selector: 'app-animal',\n  templateUrl: './animal.component.html',\n  styleUrls: ['./animal.component.css']\n})\nexport class AnimalComponent implements OnInit {\n  animals: String[]\n  name: String\n  age: Number\n\n  constructor(public databaseService: DatabaseService) { }\n\n  ngOnInit() {\n    this.animals = []\n    this.databaseService.getAnimals()\n    .subscribe(animals => this.animals = animals)\n  }\n\n  addAnimal() {\n    const animal = {\n      name: this.name,\n      age: this.age\n    }\n\n    this.databaseService.saveAnimal(animal)\n    .subscribe(animal => this.animals.push(animal))\n\n    return false\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/animal/animal.component.ts","import { Injectable } from '@angular/core';\nimport { Http, Headers } from '@angular/http';\nimport 'rxjs/add/operator/map';\n\n@Injectable()\nexport class DatabaseService {\n\n  constructor(public http:Http) {\n  }\n\n  saveAnimal(animal) {\n    const headers = new Headers()\n    headers.append('ContentType', 'application/json')\n    return this.http.post('http://localhost:8000/animal', animal, { headers: headers })\n      .map(res => res.json())\n  }\n\n  getAnimals() {\n    const headers = new Headers()\n    headers.append('ContentType', 'application/json')\n    return this.http.get('http://localhost:8000/animal', { headers: headers })\n      .map(res => res.json())\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/database.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":"webpack:///"}